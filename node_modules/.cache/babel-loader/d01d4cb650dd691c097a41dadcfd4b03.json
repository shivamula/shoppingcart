{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\shopping-cart-react-master\\\\src\\\\components\\\\Pagination.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nconst propTypes = {\n  items: PropTypes.array.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  initialPage: PropTypes.number,\n  pageSize: PropTypes.number\n};\nconst defaultProps = {\n  initialPage: 1,\n  pageSize: 4\n};\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pager: {}\n    };\n  }\n\n  componentWillMount() {\n    // set page if items array isn't empty\n    if (this.props.items && this.props.items.length) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // reset page if items array has changed\n    if (this.props.items !== prevProps.items) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  setPage(page) {\n    var {\n      items,\n      pageSize\n    } = this.props;\n    var pager = this.state.pager;\n\n    if (page < 1 || page > pager.totalPages) {\n      return;\n    } // get new pager object for specified page\n\n\n    pager = this.getPager(items.length, page, pageSize); // get new page of items from items array\n\n    var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1); // update state\n\n    this.setState({\n      pager: pager\n    }); // call change page function in parent component\n\n    this.props.onChangePage(pageOfItems);\n  }\n\n  getPager(totalItems, currentPage, pageSize) {\n    // default to first page\n    currentPage = currentPage || 1; // default page size is 10\n\n    pageSize = pageSize || 4; // calculate total pages\n\n    var totalPages = Math.ceil(totalItems / pageSize);\n    var startPage, endPage;\n\n    if (totalPages <= 4) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    } // calculate start and end item indexes\n\n\n    var startIndex = (currentPage - 1) * pageSize;\n    var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n    var pages = [...Array(endPage + 1 - startPage).keys()].map(i => startPage + i); // return object with all pager properties required by the view\n\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  }\n\n  render() {\n    var pager = this.state.pager;\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      // don't display pager if there is only 1 page\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"pagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: pager.currentPage === 1 ? 'disabled' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.setPage(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 1\n      }\n    }, \"First\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: pager.currentPage === 1 ? 'disabled' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.setPage(pager.currentPage - 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 1\n      }\n    }, \"Previous\")), pager.pages.map((page, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      className: pager.currentPage === page ? 'active' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.setPage(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 1\n      }\n    }, page))), /*#__PURE__*/React.createElement(\"li\", {\n      className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.setPage(pager.currentPage + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 1\n      }\n    }, \"Next\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.setPage(pager.totalPages),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 1\n      }\n    }, \"Last\")));\n  }\n\n}\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;","map":{"version":3,"sources":["C:/Users/Dell/shopping-cart-react-master/src/components/Pagination.js"],"names":["React","PropTypes","propTypes","items","array","isRequired","onChangePage","func","initialPage","number","pageSize","defaultProps","Pagination","Component","constructor","props","state","pager","componentWillMount","length","setPage","componentDidUpdate","prevProps","prevState","page","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","setState","totalItems","currentPage","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i","render","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n \r\nconst propTypes = {\r\nitems: PropTypes.array.isRequired,\r\nonChangePage: PropTypes.func.isRequired,\r\ninitialPage: PropTypes.number,\r\npageSize: PropTypes.number\r\n}\r\n \r\nconst defaultProps = {\r\ninitialPage: 1,\r\npageSize: 4\r\n}\r\n \r\nclass Pagination extends React.Component {\r\nconstructor(props) {\r\nsuper(props);\r\nthis.state = { pager: {} };\r\n}\r\n \r\ncomponentWillMount() {\r\n// set page if items array isn't empty\r\nif (this.props.items && this.props.items.length) {\r\nthis.setPage(this.props.initialPage);\r\n}\r\n}\r\n \r\ncomponentDidUpdate(prevProps, prevState) {\r\n// reset page if items array has changed\r\nif (this.props.items !== prevProps.items) {\r\nthis.setPage(this.props.initialPage);\r\n}\r\n}\r\n \r\nsetPage(page) {\r\nvar { items, pageSize } = this.props;\r\nvar pager = this.state.pager;\r\n \r\nif (page < 1 || page > pager.totalPages) {\r\nreturn;\r\n}\r\n \r\n// get new pager object for specified page\r\npager = this.getPager(items.length, page, pageSize);\r\n \r\n// get new page of items from items array\r\nvar pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n \r\n// update state\r\nthis.setState({ pager: pager });\r\n \r\n// call change page function in parent component\r\nthis.props.onChangePage(pageOfItems);\r\n}\r\n \r\ngetPager(totalItems, currentPage, pageSize) {\r\n// default to first page\r\ncurrentPage = currentPage || 1;\r\n \r\n// default page size is 10\r\npageSize = pageSize || 4;\r\n \r\n// calculate total pages\r\nvar totalPages = Math.ceil(totalItems / pageSize);\r\n \r\nvar startPage, endPage;\r\nif (totalPages <= 4) {\r\n// less than 10 total pages so show all\r\nstartPage = 1;\r\nendPage = totalPages;\r\n} else {\r\n// more than 10 total pages so calculate start and end pages\r\nif (currentPage <= 6) {\r\nstartPage = 1;\r\nendPage = 10;\r\n} else if (currentPage + 4 >= totalPages) {\r\nstartPage = totalPages - 9;\r\nendPage = totalPages;\r\n} else {\r\nstartPage = currentPage - 5;\r\nendPage = currentPage + 4;\r\n}\r\n}\r\n \r\n// calculate start and end item indexes\r\nvar startIndex = (currentPage - 1) * pageSize;\r\nvar endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n \r\n// create an array of pages to ng-repeat in the pager control\r\nvar pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n \r\n// return object with all pager properties required by the view\r\nreturn {\r\ntotalItems: totalItems,\r\ncurrentPage: currentPage,\r\npageSize: pageSize,\r\ntotalPages: totalPages,\r\nstartPage: startPage,\r\nendPage: endPage,\r\nstartIndex: startIndex,\r\nendIndex: endIndex,\r\npages: pages\r\n};\r\n}\r\n \r\nrender() {\r\nvar pager = this.state.pager;\r\n \r\nif (!pager.pages || pager.pages.length <= 1) {\r\n// don't display pager if there is only 1 page\r\nreturn null;\r\n}\r\n \r\nreturn (\r\n<ul className=\"pagination\">\r\n<li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n<a onClick={() => this.setPage(1)}>First</a>\r\n</li>\r\n<li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n<a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\r\n</li>\r\n{pager.pages.map((page, index) =>\r\n<li key={index} className={pager.currentPage === page ? 'active' : ''}>\r\n<a onClick={() => this.setPage(page)}>{page}</a>\r\n</li>\r\n)}\r\n<li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n<a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\r\n</li>\r\n<li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n<a onClick={() => this.setPage(pager.totalPages)}>Last</a>\r\n</li>\r\n</ul>\r\n);\r\n}\r\n}\r\n \r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}